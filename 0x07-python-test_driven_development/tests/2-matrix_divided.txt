>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, -3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

>>> matrix_divided(matrix, "Holberton")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided("Holberton", 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix, 0.44)
[[2.27, 4.55, 6.82], [9.09, 11.36, 13.64]]

>>> matrix_divided(matrix, 0.75)
[[1.33, 2.67, 4.0], [5.33, 6.67, 8.0]]

>>> matrix_divided(matrix, int("Holberton"))
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'Holberton'

>>> matrix_divided(matrix, 23.24)
[[0.04, 0.09, 0.13], [0.17, 0.22, 0.26]]

>>> matrix_divided(34, 23.24)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(34)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(matrix, 0.25)
[[4.0, 8.0, 12.0], [16.0, 20.0, 24.0]]

>>> matrix_divided(matrix, 0.025)
[[40.0, 80.0, 120.0], [160.0, 200.0, 240.0]]

>>> matrix_divided(matrix, 3645687654345678765434567)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided(matrix, 0.1)
[[10.0, 20.0, 30.0], [40.0, 50.0, 60.0]]

>>> matrix_divided([1,2,3], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
